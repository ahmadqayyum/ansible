name: AWS Lambda CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  ART_URL: http://54.194.230.60:8081/artifactory/
  ART_USER: admin
  SERVER_ID: ahmad
  ART_REPO: ext-snapshot-local #libs-release-local
  FUN_NAME: test
  USER: ec2-user
  CI: true
  
jobs:
#   CI:
#     name: SonarScan ===> BUILD ===> TEST ===> DEPLOY
#     strategy:
#       matrix:
#         node-version: [12.x]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#       - name: ls -a via ssh
#         uses: fifsky/ssh-action@master
#         with:
#           command: |
#            cd /opt
#            ls -a
#           host: ${{ secrets.HOST }}
#           user: $USER
#           key: ${{ secrets.PRIVATE_KEY}}
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKENS }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - run: npm i
#       - run: npm run build --if-present
#       - run: npm install express --save
#       - run: node index.js &
#       - run: npm install mocha chai --save-dev
#       - run: npm install request --save-dev
#       - run: npm test
#         env:
#           CI: true
#   Unit_TEST:
#     needs: CI
#     name : unit test
#     runs-on: self-hosted 
#     steps:
#       - uses: actions/checkout@master
#       - name: ls opt directory
#         uses: actions/checkout@master
#       - run: ls
#       - run: echo 'test azure ahmad'
#       - run: touch abcdef.txt
  Deploytojfrog:
#    needs: [CI, Unit_TEST]
    name : deploy to jfrog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: "jfrog install, configure cli"
        run: |
          # Get Jfrog CLI
              echo "Jfrog binary does not exist. Downloading now...."
              curl -fL https://getcli.jfrog.io | sh -s 1.32.4
              sudo mv jfrog /usr/local/bin
          # Configure Jfrog CLI
              jfrog --version
      - name: "Configure Jfrog"
        run: jfrog rt config $SERVER_ID --url=$ART_URL --user=$ART_USER --password=${{ secrets.RT_PASSWORD }} --interactive=false
      - name: "Push Release To Jfrog"
        run: jfrog rt npmi npm-virtual --build-name=bootstrap --build-number=1.0.0
       # run: jfrog rt u "test/" $ART_REPO/{1}/ --build-number=18
# --flat=false --recursive=false
